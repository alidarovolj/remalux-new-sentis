using UnityEngine;
using System.Collections.Generic;

public class CreateTestEnvironment : MonoBehaviour
{
      [Header("üè† –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ô –°–†–ï–î–´")]
      [SerializeField] private bool createOnStart = true;
      [SerializeField] private Material wallMaterial;

      [ContextMenu("Create Test Environment")]
      public void CreateEnvironment()
      {
            Debug.Log("üèóÔ∏è === –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–û–ô –°–†–ï–î–´ ===");

            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å—Ä–µ–¥—É –µ—Å–ª–∏ –µ—Å—Ç—å
            GameObject oldEnv = GameObject.Find("TestEnvironment");
            if (oldEnv != null)
            {
                  Debug.Log("üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–µ—Å—Ç–æ–≤—É—é —Å—Ä–µ–¥—É");
                  DestroyImmediate(oldEnv);
            }

            // –°–æ–∑–¥–∞–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç
            GameObject environment = new GameObject("TestEnvironment");

            // –ü–æ–ª—É—á–∞–µ–º –ø–æ–∑–∏—Ü–∏—é –∫–∞–º–µ—Ä—ã
            Camera mainCamera = Camera.main;
            if (mainCamera == null)
            {
                  Debug.LogError("‚ùå –ì–ª–∞–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");
                  return;
            }

            Vector3 cameraPos = mainCamera.transform.position;
            Vector3 cameraForward = mainCamera.transform.forward;
            Vector3 cameraRight = mainCamera.transform.right;

            Debug.Log($"üì∑ –ö–∞–º–µ—Ä–∞: Pos={cameraPos}, Forward={cameraForward}");

            // –°–æ–∑–¥–∞–µ–º —Å—Ç–µ–Ω—ã –≤–æ–∫—Ä—É–≥ –∫–∞–º–µ—Ä—ã
            CreateWall("Wall_Front", cameraPos + cameraForward * 3f, Vector3.forward, environment.transform);
            CreateWall("Wall_Left", cameraPos - cameraRight * 3f, Vector3.right, environment.transform);
            CreateWall("Wall_Right", cameraPos + cameraRight * 3f, -Vector3.right, environment.transform);
            CreateWall("Wall_Back", cameraPos - cameraForward * 3f, -Vector3.forward, environment.transform);

            // –°–æ–∑–¥–∞–µ–º –ø–æ–ª
            CreateFloor("Floor", cameraPos + Vector3.down * 1.5f, environment.transform);

            Debug.Log("‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Å—Ä–µ–¥–∞ —Å–æ–∑–¥–∞–Ω–∞!");

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            ValidateEnvironment();
      }

      private void CreateWall(string name, Vector3 position, Vector3 normal, Transform parent)
      {
            GameObject wall = GameObject.CreatePrimitive(PrimitiveType.Cube);
            wall.name = name;
            wall.transform.parent = parent;
            wall.transform.position = position;
            wall.transform.localScale = new Vector3(4f, 3f, 0.1f); // –¢–æ–Ω–∫–∞—è –≤—ã—Å–æ–∫–∞—è —Å—Ç–µ–Ω–∞

            // –ü–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º —Å—Ç–µ–Ω—É –ª–∏—Ü–æ–º –∫ –∫–∞–º–µ—Ä–µ
            wall.transform.LookAt(position + normal);

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª–æ–π –∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
            wall.layer = LayerMask.NameToLayer("SimulatedEnvironment"); // –°–ª–æ–π 8

            // Mesh Collider —É–∂–µ –µ—Å—Ç—å –æ—Ç CreatePrimitive, –Ω–æ –ø–µ—Ä–µ–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º
            MeshCollider collider = wall.GetComponent<MeshCollider>();
            if (collider != null)
            {
                  collider.convex = false;
                  collider.isTrigger = false;
            }

            // –ü—Ä–∏–º–µ–Ω—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª –µ—Å–ª–∏ –µ—Å—Ç—å
            MeshRenderer renderer = wall.GetComponent<MeshRenderer>();
            if (renderer != null && wallMaterial != null)
            {
                  renderer.material = wallMaterial;
            }

            Debug.Log($"üß± –°–æ–∑–¥–∞–Ω–∞ —Å—Ç–µ–Ω–∞: {name} | Pos: {position} | Layer: {wall.layer} | –ö–æ–ª–ª–∞–π–¥–µ—Ä: {collider != null}");
      }

      private void CreateFloor(string name, Vector3 position, Transform parent)
      {
            GameObject floor = GameObject.CreatePrimitive(PrimitiveType.Cube);
            floor.name = name;
            floor.transform.parent = parent;
            floor.transform.position = position;
            floor.transform.localScale = new Vector3(10f, 0.1f, 10f); // –ü–ª–æ—Å–∫–∏–π —à–∏—Ä–æ–∫–∏–π –ø–æ–ª

            // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª–æ–π
            floor.layer = LayerMask.NameToLayer("SimulatedEnvironment");

            MeshCollider collider = floor.GetComponent<MeshCollider>();
            if (collider != null)
            {
                  collider.convex = false;
                  collider.isTrigger = false;
            }

            Debug.Log($"üè¢ –°–æ–∑–¥–∞–Ω –ø–æ–ª: {name} | Pos: {position} | Layer: {floor.layer}");
      }

      private void ValidateEnvironment()
      {
            Debug.Log("üîç === –ü–†–û–í–ï–†–ö–ê –°–û–ó–î–ê–ù–ù–û–ô –°–†–ï–î–´ ===");

            var allColliders = FindObjectsOfType<Collider>();
            var wallColliders = 0;
            var environmentColliders = 0;

            foreach (var collider in allColliders)
            {
                  if (collider.gameObject.layer == LayerMask.NameToLayer("SimulatedEnvironment"))
                  {
                        environmentColliders++;
                        if (collider.name.Contains("Wall"))
                              wallColliders++;

                        Debug.Log($"‚úÖ –í–∞–ª–∏–¥–Ω—ã–π –∫–æ–ª–ª–∞–π–¥–µ—Ä: {collider.name} | Layer: {collider.gameObject.layer}");
                  }
            }

            Debug.Log($"üìä –ò–¢–û–ì–û: –ö–æ–ª–ª–∞–π–¥–µ—Ä–æ–≤ –≤ SimulatedEnvironment: {environmentColliders} | –°—Ç–µ–Ω: {wallColliders}");

            if (environmentColliders > 0)
            {
                  Debug.Log("üéâ –°–†–ï–î–ê –ì–û–¢–û–í–ê! –¢–µ–ø–µ—Ä—å —Ä–µ–π–∫–∞—Å—Ç—ã –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å!");
            }
            else
            {
                  Debug.LogError("‚ùå –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ - –∫–æ–ª–ª–∞–π–¥–µ—Ä—ã –Ω–µ —Å–æ–∑–¥–∞–Ω—ã!");
            }
      }

      private void Start()
      {
            if (createOnStart)
            {
                  // –ó–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º
                  Invoke(nameof(CreateEnvironment), 1f);
            }
      }
}